1、变量
用来存储数据

1、杨浩然  1个人  开一个单人间  208
2、杨浩然 和一个女同事  一个双人间  104
3、杨浩然 和一个男同事  开了两个单人间  309  308

当开房的人员跟数量还有性别不同的时候，我们在旅馆开的房间是不一样的。

我们在计算机中存储数据的大小、类型不同的时候，我们在计算机中开的房间类型也是不一样的。

50  int
int number;//表示在内存中开辟了一个整数类型的房间，并且我们取名为number
number=50;//表示将50这个整数放到number中


3.14
double d;
d=3.14;


2、声明变量的语法
变量类型 变量名;//声明了一个变量
变量名=值;//给这个变量赋值

=号在这行代码中表示赋值的意思，表示把等号右边的值，赋值给等号左边的变量。

一种更为简单的方法：
变量类型 变量名=值;

90.54
double d=90.54;


张三


3、计算机中各种各样的数据类型
int:表示整数类型，只能存放整数。
double:表示小数类型，既能存储整数也能存储小数
string：能够存储多个文本，可以为空
char：字符类型，能够存储单一的字符，要求 最多最少只能存储1个字符，不能为空
decimal：金钱类型，精度要高于double类型  。





4、变量使用的时候需要注意的地方
变量的使用过程：必须要先声明在赋值最后使用
*注意*：变量不允许重复的声明或者定义。但是可以被重复的赋值。

5、一次性声明多个相同类型的变量

6、
命名规则：
1 必须以“字母”_或@符号开头.--不要以数字开头
2 后面可以跟任意“字母”、数字、下划线.
注意:
1）你起的变量名不要与c#系统中的关键字重复.
2）在c#中,大小写是敏感的.
3)同一个变量名不允许重复定义(先这么认为,不严谨)
4)、变量名唯一能够出现的特殊字符只有下划线

要遵守的两个命名规范：
Camel:骆驼命名规范，要求变量名中首单词的首字母要小写，其余每个单词的首字母都要大写，多用于给变量去命名。
nameJapanStar  highSchoolStudent

Pascal:要求变量名中每个单词的首字母都要大写，多用于给类或者方法命名

JapanHotStar


7、赋值运算符和赋值表达式
=：表示把等号右边的值赋值给等号左边的变量。
int number=10;
由等号连接的表达式我们称之为赋值表达式，每个表达式，我们都认为可以求解出一个定值，
那么，对于赋值表达式而言，等号左边变量的值就是整个赋值表达式的值。

8、+号
如果+号两边有一边是字符串的话，那么此时这个+号就起到连接的作用。
如果+号两边都是数字，而不是字符串，那么此时加号就起到相加的作用。

9、占位符
挖个坑，再填个坑。
占位符需要我们注意的地方：
1)、占位符从{0}开始
2)、你挖了几个坑，就填几个坑，如果你多填了，没有效果，但是如果你少填了，程序抛异常
3)、占位符最终按照填坑的顺序输出


10、我们在向控制台输出的内容的时候，不管你输入的内容是什么类型，当打印到控制台的时候，都是字符串类型。
不管我们在控制台输入的内容是什么类型，当我们接受的时候，都必须要按照字符串类型去处理。

11、c#中的转义符
转义符值得就是 一个'\'加上一个特殊的字符，组成了一个具有特殊意义的字符。
\+":表示一个英文半角的双引号。\表示转义，而不表示字符。
\r\n:表示换行，操作系统支持
\n:表示换行，操作系统不支持
\b:表示一个退格键，\b放到字符串的两边没有效果
\t:表示一个tab键
\\：表示一个\
12、@符号的用法
1)、取消\在字符串中的转移作用，使其单纯的表示为一个\
2)、让代码按照你编译的原格式输出


13、算数运算符
+
-
*
/
%
  //自动类型转换或者隐式类型转换
            //1)、类型必须相兼容 (int和double)
            //2)、必须是小的类型转大的类型
            //int n=10;
            //double d = n;

            //强制类型转换 结果：丢失精度
            //303.6===》303   double---->int
            int result = (int)303.6;
            Console.WriteLine(result);
            Console.ReadKey();


14、Convert类型转换
在使用的时候需要注意：
如果要发生类型转换的两个变量的类型不兼容，那么这个时候使用Convert类型转换。
前提：面儿上一定要过的去(自己看着就能转换成功)。
如果转换成功，就成功了，如果失败，则抛异常。
























