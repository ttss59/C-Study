1、冒泡排序
int[] nums={9,8,7,6,5,4,3,2,1,0};    0,1,2,3,4,5,6,7,8,9
第一趟比较：8 7 6 5 4 3 2 1 0 9  交换了9次                 i=0    j=nums.Length-1-0;
第二趟比较：7 6 5 4 3 2 1 0 8 9  交换了9次 比较了 但是没交换 i=1   j=8 j=nums.Length-1-1;
第三趟比较：6 5 4 3 2 1 0 7 8 9  交换了7次 					i=2 j=7 j=nums.Length-1-2
第四趟比较：5 4 3 2 1 0 6 7 8 9  交换了6次                  i=3 j=6 
第五趟比较：4 3 2 1 0 5 6 7 8 9  交换了5次                  i=4 j=5
第六趟比较：3 2 1 0 4 5 6 7 8 9  交换了4次
第七趟比较：2 1 0 3 4 5 6 7 8 9  交换了3次
第八趟比较：1 0 2 3 4 5 6 7 8 9  交换了2次
第九趟比较：0 1 2 3 4 5 6 7 8 9  交换了1次

for(int i=0;i<nums.Length-1;i++)
{
	for(int j=0;j<nums.Length-1-i;j++)
	{
		if(nums[j]>nums[j+1])
		{
			int temp=nums[j];
			nums[j]=nums[j+1];
			nums[j+1]=temp;
		}
	}
}


2、方法(函数)
语法：
[public] static 返回值类型  方法名([参数列表])
{
	方法体;
}
public:访问修饰符，公开的，公共的
static:表示静态
返回值类型：如果没有返回值，写void
方法名：Pascal，要求每个单词的首字母都要大写。
参数列表：完成这个方法，所必须要提供给这个方法的条件。哪怕方法中不需要参数，小括号也不能省略。

参数：
返回值：

方法的调用：
类名.方法名([参数列表]);


3、return
1)、在方法中返回要返回的值
2)、立即结束当前方法


4、调用者和被调用者的关系
我们在Main()函数中调用Test()函数，
我们管Main()函数叫做调用者，管Test()函数叫做调用者，管Test
被调用者。
如果被调用者想要得到调用者中的值：
1、传递参数
2、声明一个静态的字段，当做"全局变量"使用。

如果调用者想要得到被调用者中的值：
1、写返回值。

形参：形式上的参数，也会在内存中开辟空间。
实参：调用函数的时候传入的参数。
问题：形参和实参的名字必须一样么？



5、在写方法的时候需要注意
1、方法的功能一定要单一。
2、在方法中尽量的避免出现提示用户输入之类的代码。


6、out参数
可以帮助我们在一个方法中返回多个值，不限类型。
使用out参数的时候要求，out参数必须在方法内为其赋值。





























