1、算运运算符  ++ --
++；分为前++和后++，不管是前++还是后++，最终的结果都是这个变量的值自身加1.
区别：如果在一个表达式中遇到了++运算符，
如果是前++，则首先这个变量的值自身加一，然后拿着这个加一后的值去参与运算。
如果是后++，则首先拿原值参与运算，运算完成后，自身再加一。



2、复合赋值运算符
+= 
-=
*=
/=
%=

3、在一个表达式当中，如果既有一元运算符也有二元运算符，先算一元运算符。

4、关系运算符
>
<
>=
<=
==
!=
关系运算符用来描述两个事物之间的关系。

由关系运算符连接的表达式我们称之为关系表达式。
关系表达式的结果是bool类型。
bool类型只有两个值，true false


5、逻辑运算符 
&& shift+7
||
!

逻辑与的优先级要高于逻辑或，也就是说，在一个逻辑表达式中，如果既有逻辑与运算符，也有逻辑或运算符，
先算逻辑与运算符。

6、顺序结构、分支结构、选择结构
顺序结构：从上到下，代码一行一行的执行，不会发生跳跃。
分支结构：if结构  if-else结构
选择结构：if else-if  switch-case
循环结构：while  do-while for foreach

7、if结构
语法：
if(关系表达式或者bool类型的值或者逻辑表达式)
{
	代码;
}
执行过程：
 程序执行到if处，首先判断if后面所带的条件的值，如果为true，那么。进入if所带的大括号，执行其中的代码。
 如果为false，则跳过if所带的大括号，继续向下执行。

 执行特点：先判断，再执行，有可能一行代码都不执行。
 
 8、if-else
 语法：
if(关系表达式或者bool类型的值或者逻辑表达式)
{
	代码;
}
else
{
	
}
执行构成：程序首先判断if所带的小括号中的条件是否成立，如果成立，则执行if所带的大括号中的代码，
执行完成后，跳出if-else结构。
如果条件不成立，则跳过if所带的大括号，去执行else所带的大括号中的代码。

特点：先判断，再执行，最少都要执行一个语句块中的代码
注意：else永远都跟离它最近的那个if配对


9、if else-if：针对多条件的判断  
作用：用来做多条件的区间判断
语法：
	if(条件1)
	{
		代码;
	}
	else if(条件2)
	{
		代码;
	}
	else if(条件3)
	{
		代码;
	}
	else
	{
		
	}
	执行过程：程序运行到if处，首先判断第一个if所带的小括号中的条件是否成立，如果成立，也就是返回一个true，
	则执行当前if所带的大括号中的代码，执行完成后，退出if else-if结构。
	如果第一个if所带的条件不成立，则继续向下进行判断，如果在判断的过程中，某一个if所带的条件成立了，
	则执行该if所带的代码，执行完成后，跳出if else-if结构。
	如果每一个if所带的条件都不成立，则看该结构中有没有else，如果有else，则执行else中的代码
	，如果没有else，则该if else-if结构什么都不做。


10、try-catch异常捕获
try
{
	可能会出现异常的代码;
	范德萨范德萨范德萨范德萨
	fdsfdsf
	fdsfdsfds
	fdsfds
}
catch
{
	出现异常后要执行的代码;
}
执行过程：当try中的代码出现异常的时候，出现异常的这行代码后面的代码不会被执行。
而是直接跳到catch中执行catch的代码。
使用规律：哪行代码有可能出现异常，就踹他一脚。



11、变量的作用域
能够访问到这个变量的范围。
变量的作用域一般从声明他的那个大括号开始到这个大括号所对应的结束的大括号。

12、如果想要让某些代码在满足某些条件的时候去执行，这个时候我们使用bool类型的变量来解决。


13、swtich-case
作用：用来做多条件的定值判断
语法：
switch(要判断的变量或者表达式)
{
	case 值1:要执行的代码;
	break;
	case 值2:要执行的代码;
	break;
	case 值3:要执行的代码;
	break;
	........
	default:要执行的代码;
	break;
}
执行过程：程序运行到switch处，首先计算switch后面所带的小括号中的变量或者表达式的值，拿着计算出来的
这个结果跟每个case的值进行匹配，一旦匹配成功，则执行该case所带的代码块，
如果跟每个casa所带的值都不匹配，则看当前switch-csae结构中是否有default，如果有default，
则执行default所带的代码块，否则的话，什么都不做。

break：跳出switch-case结构。




















